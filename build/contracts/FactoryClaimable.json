{
  "contractName": "FactoryClaimable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LATEST",
      "outputs": [
        {
          "internalType": "bytes8",
          "name": "",
          "type": "bytes8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "replaceOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swProxy",
      "outputs": [
        {
          "internalType": "contract Proxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swProxyLatest",
      "outputs": [
        {
          "internalType": "contract ProxyLatest",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LATEST\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"replaceOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swProxy\",\"outputs\":[{\"internalType\":\"contract Proxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swProxyLatest\",\"outputs\":[{\"internalType\":\"contract ProxyLatest\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension for the Ownable contract, where the ownership needs to be claimed. This allows the new owner to accept the transfer.\",\"kind\":\"dev\",\"methods\":{\"claimOwnership()\":{\"details\":\"Allows the pendingOwner address to finalize the transfer.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to set the pendingOwner address.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Claimable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol\":\"FactoryClaimable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/Tal/code/kirobo/ki-eth-contracts/contracts/FactoryStorage.sol\":{\"keccak256\":\"0x89531dc32bf7a42c7b7b6a58a92743546c109f4985d3becce86ccded26345d78\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f2d53d21d9b77884dde7c70584a5bd723dfae3c5f7e7473f48c58d6cb49becdd\",\"dweb:/ipfs/QmRNgecxmbJgVA2NgfLXeJkng3tU8aatLu8ptnFmm7SKnN\"]},\"/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol\":{\"keccak256\":\"0x2c3a519ad2dbe527b381b65c35b6d3adf6f0cc24610d5513618ad560dec9f251\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8b26ee2b6ac4b32c8f4e04924ce9b67b882a43f05b111d9972f428f71602e42f\",\"dweb:/ipfs/QmPTgL1WS3pnA3ZRcLadiKosnCbGEGZFaWKuuqJRKS6Qcn\"]},\"/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/FactoryOwnable.sol\":{\"keccak256\":\"0x9abee316ed0863051dfd00fcda5ef32b469db3bca9363d2ab0a4c925c9266520\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://94a7f5177af7bf8ea151b28aaf8866a3ab91c7e88432737acb301f42b3569e05\",\"dweb:/ipfs/QmRxPKegmgGMWij9ZPPZWh66mFqSMuVTtLauKmSQwe4SC6\"]},\"/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/MultiSig.sol\":{\"keccak256\":\"0x0ec8acfdea572680f153450ed3e0aef9ec015510c6bccf89bd2312a2f3e19592\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c4ed41676ef933203df18b13104bd3dc501771b7d8601db4b8d0c60b0799d76f\",\"dweb:/ipfs/QmVyh4U2f2La1GxgsvmpVbMsw8W6trLQfi9iTfqe8uVuCf\"]},\"/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/Proxy.sol\":{\"keccak256\":\"0x084d120aa1efbe8d21c4a2d867e424321b790f163e33e10492dd75d4ed84e000\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a62de46ac3bd935a77ab92bdbb890160be20df13d14feee078e3d53b1eefa211\",\"dweb:/ipfs/QmYmcFMTornofgBjm1dxWc731J9WUDGnuq952i9C1NpArK\"]},\"/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/ProxyLatest.sol\":{\"keccak256\":\"0xeaa2ad831ed87c5e674e536625f3f9b680ad3e38d0074fea90a0b28c9b05db8f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://71cb3b5fca27cf32a8a554aa418eb7c0f602d589ffe59cd24a3edd60c7bf4c8f\",\"dweb:/ipfs/QmdgNvdQ67LWiGGTjZ7guwNNakVZEtSebYHy7WCCfWyzgV\"]},\"/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/StorageBase.sol\":{\"keccak256\":\"0xb25b8133a1626530227065289e583b2a3aa21b9243b0147db9b7963ad933aa1b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e5d6121fcc7cc5ad962bccdc6a4b7d0788d6e75b47e10be37ca23127d4b67629\",\"dweb:/ipfs/QmPVmVYboE6sPEQUM59HF71ZtRW2mfSprFd7z9RnsPN4J6\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\npragma abicoder v1;\n\nimport \"./FactoryOwnable.sol\";\n\n/**\n * @title Claimable\n * @dev Extension for the Ownable contract, where the ownership needs to be claimed.\n * This allows the new owner to accept the transfer.\n */\nabstract contract FactoryClaimable is FactoryOwnable {\n    //address public pendingOwner; Moved to FactoryStorage\n\n    /**\n     * @dev Modifier throws if called by any account other than the pendingOwner.\n     */\n    modifier onlyPendingOwner() {\n        // require(msg.sender == pendingOwner, \"not pending owner\");\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to set the pendingOwner address.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(\n        address newOwner /*onlyOwner*/\n    ) public pure override {\n        // pendingOwner = newOwner;\n    }\n\n    /**\n     * @dev Allows the pendingOwner address to finalize the transfer.\n     */\n    function claimOwnership() public onlyPendingOwner {\n        // emit OwnershipTransferred(owner, pendingOwner);\n        // owner = pendingOwner;\n        // pendingOwner = address(0);\n    }\n}\n",
  "sourcePath": "/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol",
  "ast": {
    "absolutePath": "/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol",
    "exportedSymbols": {
      "FactoryClaimable": [
        4912
      ],
      "FactoryOwnable": [
        4963
      ],
      "FactoryStorage": [
        1550
      ],
      "ICreator": [
        6527
      ],
      "IProxy": [
        6545
      ],
      "IStorage": [
        6554
      ],
      "IStorageBase": [
        6560
      ],
      "IWallet": [
        6568
      ],
      "MultiSig": [
        6160
      ],
      "Proxy": [
        6244
      ],
      "ProxyLatest": [
        6274
      ],
      "StorageBase": [
        6697
      ]
    },
    "id": 4913,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4886,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:10"
      },
      {
        "id": 4887,
        "literals": [
          "abicoder",
          "v1"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:19:10"
      },
      {
        "absolutePath": "/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/FactoryOwnable.sol",
        "file": "./FactoryOwnable.sol",
        "id": 4888,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4913,
        "sourceUnit": 4964,
        "src": "85:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 4890,
              "name": "FactoryOwnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4963,
              "src": "321:14:10"
            },
            "id": 4891,
            "nodeType": "InheritanceSpecifier",
            "src": "321:14:10"
          }
        ],
        "contractDependencies": [
          1550,
          4963,
          6160
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4889,
          "nodeType": "StructuredDocumentation",
          "src": "117:165:10",
          "text": " @title Claimable\n @dev Extension for the Ownable contract, where the ownership needs to be claimed.\n This allows the new owner to accept the transfer."
        },
        "fullyImplemented": false,
        "id": 4912,
        "linearizedBaseContracts": [
          4912,
          4963,
          1550,
          6160
        ],
        "name": "FactoryClaimable",
        "nameLocation": "301:16:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4895,
              "nodeType": "Block",
              "src": "528:87:10",
              "statements": [
                {
                  "id": 4894,
                  "nodeType": "PlaceholderStatement",
                  "src": "607:1:10"
                }
              ]
            },
            "documentation": {
              "id": 4892,
              "nodeType": "StructuredDocumentation",
              "src": "402:93:10",
              "text": " @dev Modifier throws if called by any account other than the pendingOwner."
            },
            "id": 4896,
            "name": "onlyPendingOwner",
            "nameLocation": "509:16:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:2:10"
            },
            "src": "500:115:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4945
            ],
            "body": {
              "id": 4903,
              "nodeType": "Block",
              "src": "862:43:10",
              "statements": []
            },
            "documentation": {
              "id": 4897,
              "nodeType": "StructuredDocumentation",
              "src": "621:142:10",
              "text": " @dev Allows the current owner to set the pendingOwner address.\n @param newOwner The address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 4904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "777:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4901,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "853:8:10"
            },
            "parameters": {
              "id": 4900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4899,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "812:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 4904,
                  "src": "804:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:46:10"
            },
            "returnParameters": {
              "id": 4902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:10"
            },
            "scope": 4912,
            "src": "768:137:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4910,
              "nodeType": "Block",
              "src": "1047:137:10",
              "statements": []
            },
            "documentation": {
              "id": 4905,
              "nodeType": "StructuredDocumentation",
              "src": "911:81:10",
              "text": " @dev Allows the pendingOwner address to finalize the transfer."
            },
            "functionSelector": "4e71e0c8",
            "id": 4911,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4908,
                "modifierName": {
                  "id": 4907,
                  "name": "onlyPendingOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4896,
                  "src": "1030:16:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1030:16:10"
              }
            ],
            "name": "claimOwnership",
            "nameLocation": "1006:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:2:10"
            },
            "returnParameters": {
              "id": 4909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1047:0:10"
            },
            "scope": 4912,
            "src": "997:187:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4913,
        "src": "283:903:10"
      }
    ],
    "src": "40:1147:10"
  },
  "legacyAST": {
    "absolutePath": "/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol",
    "exportedSymbols": {
      "FactoryClaimable": [
        4912
      ],
      "FactoryOwnable": [
        4963
      ],
      "FactoryStorage": [
        1550
      ],
      "ICreator": [
        6527
      ],
      "IProxy": [
        6545
      ],
      "IStorage": [
        6554
      ],
      "IStorageBase": [
        6560
      ],
      "IWallet": [
        6568
      ],
      "MultiSig": [
        6160
      ],
      "Proxy": [
        6244
      ],
      "ProxyLatest": [
        6274
      ],
      "StorageBase": [
        6697
      ]
    },
    "id": 4913,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4886,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:10"
      },
      {
        "id": 4887,
        "literals": [
          "abicoder",
          "v1"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:19:10"
      },
      {
        "absolutePath": "/Users/Tal/code/kirobo/ki-eth-contracts/contracts/lib/FactoryOwnable.sol",
        "file": "./FactoryOwnable.sol",
        "id": 4888,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4913,
        "sourceUnit": 4964,
        "src": "85:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 4890,
              "name": "FactoryOwnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4963,
              "src": "321:14:10"
            },
            "id": 4891,
            "nodeType": "InheritanceSpecifier",
            "src": "321:14:10"
          }
        ],
        "contractDependencies": [
          1550,
          4963,
          6160
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4889,
          "nodeType": "StructuredDocumentation",
          "src": "117:165:10",
          "text": " @title Claimable\n @dev Extension for the Ownable contract, where the ownership needs to be claimed.\n This allows the new owner to accept the transfer."
        },
        "fullyImplemented": false,
        "id": 4912,
        "linearizedBaseContracts": [
          4912,
          4963,
          1550,
          6160
        ],
        "name": "FactoryClaimable",
        "nameLocation": "301:16:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4895,
              "nodeType": "Block",
              "src": "528:87:10",
              "statements": [
                {
                  "id": 4894,
                  "nodeType": "PlaceholderStatement",
                  "src": "607:1:10"
                }
              ]
            },
            "documentation": {
              "id": 4892,
              "nodeType": "StructuredDocumentation",
              "src": "402:93:10",
              "text": " @dev Modifier throws if called by any account other than the pendingOwner."
            },
            "id": 4896,
            "name": "onlyPendingOwner",
            "nameLocation": "509:16:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:2:10"
            },
            "src": "500:115:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4945
            ],
            "body": {
              "id": 4903,
              "nodeType": "Block",
              "src": "862:43:10",
              "statements": []
            },
            "documentation": {
              "id": 4897,
              "nodeType": "StructuredDocumentation",
              "src": "621:142:10",
              "text": " @dev Allows the current owner to set the pendingOwner address.\n @param newOwner The address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 4904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "777:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4901,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "853:8:10"
            },
            "parameters": {
              "id": 4900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4899,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "812:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 4904,
                  "src": "804:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:46:10"
            },
            "returnParameters": {
              "id": 4902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:10"
            },
            "scope": 4912,
            "src": "768:137:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4910,
              "nodeType": "Block",
              "src": "1047:137:10",
              "statements": []
            },
            "documentation": {
              "id": 4905,
              "nodeType": "StructuredDocumentation",
              "src": "911:81:10",
              "text": " @dev Allows the pendingOwner address to finalize the transfer."
            },
            "functionSelector": "4e71e0c8",
            "id": 4911,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4908,
                "modifierName": {
                  "id": 4907,
                  "name": "onlyPendingOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4896,
                  "src": "1030:16:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1030:16:10"
              }
            ],
            "name": "claimOwnership",
            "nameLocation": "1006:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:2:10"
            },
            "returnParameters": {
              "id": 4909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1047:0:10"
            },
            "scope": 4912,
            "src": "997:187:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4913,
        "src": "283:903:10"
      }
    ],
    "src": "40:1147:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-13T23:14:26.302Z",
  "devdoc": {
    "details": "Extension for the Ownable contract, where the ownership needs to be claimed. This allows the new owner to accept the transfer.",
    "kind": "dev",
    "methods": {
      "claimOwnership()": {
        "details": "Allows the pendingOwner address to finalize the transfer."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to set the pendingOwner address.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Claimable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "version": 1
  }
}