{
  "contractName": "FactoryClaimable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LATEST",
      "outputs": [
        {
          "internalType": "bytes8",
          "name": "",
          "type": "bytes8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "replaceOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swProxy",
      "outputs": [
        {
          "internalType": "contract Proxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swProxyLatest",
      "outputs": [
        {
          "internalType": "contract ProxyLatest",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LATEST\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"replaceOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swProxy\",\"outputs\":[{\"internalType\":\"contract Proxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swProxyLatest\",\"outputs\":[{\"internalType\":\"contract ProxyLatest\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension for the Ownable contract, where the ownership needs to be claimed. This allows the new owner to accept the transfer.\",\"kind\":\"dev\",\"methods\":{\"claimOwnership()\":{\"details\":\"Allows the pendingOwner address to finalize the transfer.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to set the pendingOwner address.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Claimable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol\":\"FactoryClaimable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/FactoryStorage.sol\":{\"keccak256\":\"0xe4e81a0f5e8018d65f4c35d52efe39680c346cf24a3a9936504a8cc6ac1c2b99\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c4253936c58e5955be16c70b6300a6e8d5bbf8ead69592c64bdabf464a69744a\",\"dweb:/ipfs/QmdHje6WmBVCRjL3Fk4W8sxaeSJ1P2JGBfKqQwbZmUj2PK\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol\":{\"keccak256\":\"0x6c9f67273f11686a61fc21d565331f7e77638cf812cce085bad40833f39e03ef\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6c8902c40d8ac0aee9d257ae6290d76339ed2132ed9c83643b90f752a9f097bd\",\"dweb:/ipfs/QmXHS7hQ5bki5wNuhDrVmxPETxVuZXv57NSJCUtM1BSkGb\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryOwnable.sol\":{\"keccak256\":\"0xd3567b407c0263297c1fa46b1d9541250e9ada5b949cf868903852ad3b5480c6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5275efd8f3db72197ae49bef1e266ef412c66fdb947a520254b48928995b9801\",\"dweb:/ipfs/QmZFu4vL6u27RY2HxYiyYKDD613aK7psEpqm3Xv7ua1Au6\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/MultiSig.sol\":{\"keccak256\":\"0xaa7ccc4ae937db7bf3394a91bd06d78261b88f51b620aad5ed6dbce0a992b032\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://77a9739b05dbcbd4d67d25268249ad7e4f4301994b035d5dd3c2e82d4c70151c\",\"dweb:/ipfs/QmWYs4XKRxqSgyCTEamiqgs41tgQr1APqs5HD2K9yBGjj1\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/Proxy.sol\":{\"keccak256\":\"0x6acc9cbbabe2c50f8eb5a83ba28b1aca73d05b6dc76410dffd31eb3ee1f58e4f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c79da39191c92c118bbeffad631c626f38de86f2f8567b7f51af7370392f733e\",\"dweb:/ipfs/QmPCLNBbJVQLsF7oWfroca2gPx6sHsshcoKpVdnYcQea4k\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/ProxyLatest.sol\":{\"keccak256\":\"0x9b26692ccfd0efcc778e0602432f8f22ce637907be6062a98ad785f310ac1ce1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://57fec5bf7c65fc50b7c0f24462d2c27b25a3e590f6652161e4971bfd9bff8907\",\"dweb:/ipfs/QmY1q2DC4942WuLHqqiFHjxRjv9b84mkxzvdJAfGd4a53e\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/StorageBase.sol\":{\"keccak256\":\"0x8ce901f4b48749ad127cd19e034a0a66693969951e2eda45fa22f35e43efd4d2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9d6fd8e024876804ff99165f733c1d43f20b87511739e169a0e2d15e3c103476\",\"dweb:/ipfs/QmVfdYK3idjT1qNtRhYbszmui9V7dmdWvGfRhC7eoNCjqd\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport \"./FactoryOwnable.sol\";\n\n/**\n * @title Claimable\n * @dev Extension for the Ownable contract, where the ownership needs to be claimed.\n * This allows the new owner to accept the transfer.\n */\nabstract contract FactoryClaimable is FactoryOwnable {\n    //address public pendingOwner; Moved to FactoryStorage\n\n    /**\n    * @dev Modifier throws if called by any account other than the pendingOwner.\n    */\n    modifier onlyPendingOwner() {\n        // require(msg.sender == pendingOwner, \"not pending owner\");\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to set the pendingOwner address.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public /*onlyOwner*/ override pure{\n        // pendingOwner = newOwner;\n    }\n\n    /**\n    * @dev Allows the pendingOwner address to finalize the transfer.\n    */\n    function claimOwnership() public onlyPendingOwner {\n        // emit OwnershipTransferred(owner, pendingOwner);\n        // owner = pendingOwner;\n        // pendingOwner = address(0);\n    }\n}\n",
  "sourcePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol",
  "ast": {
    "absolutePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol",
    "exportedSymbols": {
      "FactoryClaimable": [
        3145
      ],
      "FactoryOwnable": [
        3195
      ],
      "FactoryStorage": [
        1203
      ],
      "ICreator": [
        4716
      ],
      "IProxy": [
        4734
      ],
      "IStorage": [
        4743
      ],
      "IStorageBase": [
        4749
      ],
      "MultiSig": [
        4389
      ],
      "Proxy": [
        4471
      ],
      "ProxyLatest": [
        4500
      ],
      "StorageBase": [
        4878
      ]
    },
    "id": 3146,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3120,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:8"
      },
      {
        "absolutePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryOwnable.sol",
        "file": "./FactoryOwnable.sol",
        "id": 3121,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3146,
        "sourceUnit": 3196,
        "src": "65:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3123,
              "name": "FactoryOwnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3195,
              "src": "301:14:8"
            },
            "id": 3124,
            "nodeType": "InheritanceSpecifier",
            "src": "301:14:8"
          }
        ],
        "contractDependencies": [
          1203,
          3195,
          4389
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3122,
          "nodeType": "StructuredDocumentation",
          "src": "97:165:8",
          "text": " @title Claimable\n @dev Extension for the Ownable contract, where the ownership needs to be claimed.\n This allows the new owner to accept the transfer."
        },
        "fullyImplemented": false,
        "id": 3145,
        "linearizedBaseContracts": [
          3145,
          3195,
          1203,
          4389
        ],
        "name": "FactoryClaimable",
        "nameLocation": "281:16:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3128,
              "nodeType": "Block",
              "src": "506:87:8",
              "statements": [
                {
                  "id": 3127,
                  "nodeType": "PlaceholderStatement",
                  "src": "585:1:8"
                }
              ]
            },
            "documentation": {
              "id": 3125,
              "nodeType": "StructuredDocumentation",
              "src": "382:91:8",
              "text": " @dev Modifier throws if called by any account other than the pendingOwner."
            },
            "id": 3129,
            "name": "onlyPendingOwner",
            "nameLocation": "487:16:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "503:2:8"
            },
            "src": "478:115:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3177
            ],
            "body": {
              "id": 3136,
              "nodeType": "Block",
              "src": "822:43:8",
              "statements": []
            },
            "documentation": {
              "id": 3130,
              "nodeType": "StructuredDocumentation",
              "src": "599:139:8",
              "text": " @dev Allows the current owner to set the pendingOwner address.\n @param newOwner The address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 3137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "752:17:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3134,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "809:8:8"
            },
            "parameters": {
              "id": 3133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3132,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "778:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3137,
                  "src": "770:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:18:8"
            },
            "returnParameters": {
              "id": 3135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:8"
            },
            "scope": 3145,
            "src": "743:122:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3143,
              "nodeType": "Block",
              "src": "1005:137:8",
              "statements": []
            },
            "documentation": {
              "id": 3138,
              "nodeType": "StructuredDocumentation",
              "src": "871:79:8",
              "text": " @dev Allows the pendingOwner address to finalize the transfer."
            },
            "functionSelector": "4e71e0c8",
            "id": 3144,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3141,
                "modifierName": {
                  "id": 3140,
                  "name": "onlyPendingOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3129,
                  "src": "988:16:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "988:16:8"
              }
            ],
            "name": "claimOwnership",
            "nameLocation": "964:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:2:8"
            },
            "returnParameters": {
              "id": 3142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1005:0:8"
            },
            "scope": 3145,
            "src": "955:187:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3146,
        "src": "263:881:8"
      }
    ],
    "src": "40:1105:8"
  },
  "legacyAST": {
    "absolutePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol",
    "exportedSymbols": {
      "FactoryClaimable": [
        3145
      ],
      "FactoryOwnable": [
        3195
      ],
      "FactoryStorage": [
        1203
      ],
      "ICreator": [
        4716
      ],
      "IProxy": [
        4734
      ],
      "IStorage": [
        4743
      ],
      "IStorageBase": [
        4749
      ],
      "MultiSig": [
        4389
      ],
      "Proxy": [
        4471
      ],
      "ProxyLatest": [
        4500
      ],
      "StorageBase": [
        4878
      ]
    },
    "id": 3146,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3120,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:8"
      },
      {
        "absolutePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryOwnable.sol",
        "file": "./FactoryOwnable.sol",
        "id": 3121,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3146,
        "sourceUnit": 3196,
        "src": "65:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3123,
              "name": "FactoryOwnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3195,
              "src": "301:14:8"
            },
            "id": 3124,
            "nodeType": "InheritanceSpecifier",
            "src": "301:14:8"
          }
        ],
        "contractDependencies": [
          1203,
          3195,
          4389
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3122,
          "nodeType": "StructuredDocumentation",
          "src": "97:165:8",
          "text": " @title Claimable\n @dev Extension for the Ownable contract, where the ownership needs to be claimed.\n This allows the new owner to accept the transfer."
        },
        "fullyImplemented": false,
        "id": 3145,
        "linearizedBaseContracts": [
          3145,
          3195,
          1203,
          4389
        ],
        "name": "FactoryClaimable",
        "nameLocation": "281:16:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3128,
              "nodeType": "Block",
              "src": "506:87:8",
              "statements": [
                {
                  "id": 3127,
                  "nodeType": "PlaceholderStatement",
                  "src": "585:1:8"
                }
              ]
            },
            "documentation": {
              "id": 3125,
              "nodeType": "StructuredDocumentation",
              "src": "382:91:8",
              "text": " @dev Modifier throws if called by any account other than the pendingOwner."
            },
            "id": 3129,
            "name": "onlyPendingOwner",
            "nameLocation": "487:16:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "503:2:8"
            },
            "src": "478:115:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3177
            ],
            "body": {
              "id": 3136,
              "nodeType": "Block",
              "src": "822:43:8",
              "statements": []
            },
            "documentation": {
              "id": 3130,
              "nodeType": "StructuredDocumentation",
              "src": "599:139:8",
              "text": " @dev Allows the current owner to set the pendingOwner address.\n @param newOwner The address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 3137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "752:17:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3134,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "809:8:8"
            },
            "parameters": {
              "id": 3133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3132,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "778:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3137,
                  "src": "770:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:18:8"
            },
            "returnParameters": {
              "id": 3135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:8"
            },
            "scope": 3145,
            "src": "743:122:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3143,
              "nodeType": "Block",
              "src": "1005:137:8",
              "statements": []
            },
            "documentation": {
              "id": 3138,
              "nodeType": "StructuredDocumentation",
              "src": "871:79:8",
              "text": " @dev Allows the pendingOwner address to finalize the transfer."
            },
            "functionSelector": "4e71e0c8",
            "id": 3144,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3141,
                "modifierName": {
                  "id": 3140,
                  "name": "onlyPendingOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3129,
                  "src": "988:16:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "988:16:8"
              }
            ],
            "name": "claimOwnership",
            "nameLocation": "964:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:2:8"
            },
            "returnParameters": {
              "id": 3142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1005:0:8"
            },
            "scope": 3145,
            "src": "955:187:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3146,
        "src": "263:881:8"
      }
    ],
    "src": "40:1105:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-21T20:16:32.930Z",
  "devdoc": {
    "details": "Extension for the Ownable contract, where the ownership needs to be claimed. This allows the new owner to accept the transfer.",
    "kind": "dev",
    "methods": {
      "claimOwnership()": {
        "details": "Allows the pendingOwner address to finalize the transfer."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to set the pendingOwner address.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Claimable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "version": 1
  }
}