{
  "contractName": "FactoryClaimable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LATEST",
      "outputs": [
        {
          "internalType": "bytes8",
          "name": "",
          "type": "bytes8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "replaceOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_frozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LATEST\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"replaceOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension for the Ownable contract, where the ownership needs to be claimed. This allows the new owner to accept the transfer.\",\"kind\":\"dev\",\"methods\":{\"claimOwnership()\":{\"details\":\"Allows the pendingOwner address to finalize the transfer.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to set the pendingOwner address.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Claimable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol\":\"FactoryClaimable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/FactoryStorage.sol\":{\"keccak256\":\"0x142ee4c99805df21e3392683073b818d155963ba3ff7041e63f6167962b49775\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a55cdc162687cda7f2eb345cf7104c14ecc3fc11b439e167bbb380abbfea9012\",\"dweb:/ipfs/QmR7YwjGs7YCoU9hbscsed8ZWBpTBzeZpZzosWRipWSyoX\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol\":{\"keccak256\":\"0x2c3a519ad2dbe527b381b65c35b6d3adf6f0cc24610d5513618ad560dec9f251\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8b26ee2b6ac4b32c8f4e04924ce9b67b882a43f05b111d9972f428f71602e42f\",\"dweb:/ipfs/QmPTgL1WS3pnA3ZRcLadiKosnCbGEGZFaWKuuqJRKS6Qcn\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryOwnable.sol\":{\"keccak256\":\"0xaa18a6133da184d3ede8becf7c60ce66df2a4c02175453b4cb59311dba51f79d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://593bea9610e9a1b0833ffc4695bb8f8b560dc61d354705e2451d948c54cd9fbf\",\"dweb:/ipfs/QmRxSWgwLYzPj8eC6CLCYPnyp6J1GvM3m1SdDUkg2ydb9t\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/MultiSig.sol\":{\"keccak256\":\"0x87cf3596c846ae434b101f83863e27ca59ec52265bdb8799593586b231ed1d0e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a73767946286f38a481d934a41795c580e4810b49192c57e73f2e867a3a7c124\",\"dweb:/ipfs/QmWtnQiJPYF32cjP5E1p2Hmv42Ns9Gm2PXLnnj3fpPFAJV\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/Proxy.sol\":{\"keccak256\":\"0x3b492a2fc464a844493ee83cf7cbad64a19f58aa264beeef787367bb366127a3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://efbbf6cf16aa669799c563346cc629e14bd33973e0b7b0bab86cfe9a76e4df47\",\"dweb:/ipfs/QmPp9QRpF4cdicYJ3yeD7oKgxrwAQhVJjSjLYdCCwJbd7T\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/ProxyLatest.sol\":{\"keccak256\":\"0xeaa2ad831ed87c5e674e536625f3f9b680ad3e38d0074fea90a0b28c9b05db8f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://71cb3b5fca27cf32a8a554aa418eb7c0f602d589ffe59cd24a3edd60c7bf4c8f\",\"dweb:/ipfs/QmdgNvdQ67LWiGGTjZ7guwNNakVZEtSebYHy7WCCfWyzgV\"]},\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/StorageBase.sol\":{\"keccak256\":\"0x81770357090bdbf1feca583ccacedd3785a25ac8481999372d00cb4fc3ef5b23\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c4341eacdecd86e21a7183bea1b1a5e77a265afd5b796c0a5d8aaed74b2dd213\",\"dweb:/ipfs/QmVasZNYxiQwRX7xkHncwGykV5HeX5JYjoLVRQjbtd83fg\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\npragma abicoder v1;\n\nimport \"./FactoryOwnable.sol\";\n\n/**\n * @title Claimable\n * @dev Extension for the Ownable contract, where the ownership needs to be claimed.\n * This allows the new owner to accept the transfer.\n */\nabstract contract FactoryClaimable is FactoryOwnable {\n    //address public pendingOwner; Moved to FactoryStorage\n\n    /**\n     * @dev Modifier throws if called by any account other than the pendingOwner.\n     */\n    modifier onlyPendingOwner() {\n        // require(msg.sender == pendingOwner, \"not pending owner\");\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to set the pendingOwner address.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(\n        address newOwner /*onlyOwner*/\n    ) public pure override {\n        // pendingOwner = newOwner;\n    }\n\n    /**\n     * @dev Allows the pendingOwner address to finalize the transfer.\n     */\n    function claimOwnership() public onlyPendingOwner {\n        // emit OwnershipTransferred(owner, pendingOwner);\n        // owner = pendingOwner;\n        // pendingOwner = address(0);\n    }\n}\n",
  "sourcePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol",
  "ast": {
    "absolutePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol",
    "exportedSymbols": {
      "ENS": [
        3934
      ],
      "FactoryClaimable": [
        7430
      ],
      "FactoryOwnable": [
        7481
      ],
      "FactoryStorage": [
        4116
      ],
      "ICreator": [
        9213
      ],
      "IProxy": [
        9231
      ],
      "IStorage": [
        9240
      ],
      "IStorageBase": [
        9246
      ],
      "IWallet": [
        9254
      ],
      "MultiSig": [
        8678
      ],
      "Proxy": [
        8918
      ],
      "ProxyLatest": [
        8948
      ],
      "Resolver": [
        3942
      ],
      "StorageBase": [
        9389
      ]
    },
    "id": 7431,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7404,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:10"
      },
      {
        "id": 7405,
        "literals": [
          "abicoder",
          "v1"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:19:10"
      },
      {
        "absolutePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryOwnable.sol",
        "file": "./FactoryOwnable.sol",
        "id": 7406,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7431,
        "sourceUnit": 7482,
        "src": "85:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7408,
              "name": "FactoryOwnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7481,
              "src": "321:14:10"
            },
            "id": 7409,
            "nodeType": "InheritanceSpecifier",
            "src": "321:14:10"
          }
        ],
        "contractDependencies": [
          4116,
          7481,
          8678
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7407,
          "nodeType": "StructuredDocumentation",
          "src": "117:165:10",
          "text": " @title Claimable\n @dev Extension for the Ownable contract, where the ownership needs to be claimed.\n This allows the new owner to accept the transfer."
        },
        "fullyImplemented": false,
        "id": 7430,
        "linearizedBaseContracts": [
          7430,
          7481,
          4116,
          8678
        ],
        "name": "FactoryClaimable",
        "nameLocation": "301:16:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7413,
              "nodeType": "Block",
              "src": "528:87:10",
              "statements": [
                {
                  "id": 7412,
                  "nodeType": "PlaceholderStatement",
                  "src": "607:1:10"
                }
              ]
            },
            "documentation": {
              "id": 7410,
              "nodeType": "StructuredDocumentation",
              "src": "402:93:10",
              "text": " @dev Modifier throws if called by any account other than the pendingOwner."
            },
            "id": 7414,
            "name": "onlyPendingOwner",
            "nameLocation": "509:16:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:2:10"
            },
            "src": "500:115:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              7463
            ],
            "body": {
              "id": 7421,
              "nodeType": "Block",
              "src": "862:43:10",
              "statements": []
            },
            "documentation": {
              "id": 7415,
              "nodeType": "StructuredDocumentation",
              "src": "621:142:10",
              "text": " @dev Allows the current owner to set the pendingOwner address.\n @param newOwner The address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 7422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "777:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7419,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "853:8:10"
            },
            "parameters": {
              "id": 7418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7417,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "812:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 7422,
                  "src": "804:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:46:10"
            },
            "returnParameters": {
              "id": 7420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:10"
            },
            "scope": 7430,
            "src": "768:137:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7428,
              "nodeType": "Block",
              "src": "1047:137:10",
              "statements": []
            },
            "documentation": {
              "id": 7423,
              "nodeType": "StructuredDocumentation",
              "src": "911:81:10",
              "text": " @dev Allows the pendingOwner address to finalize the transfer."
            },
            "functionSelector": "4e71e0c8",
            "id": 7429,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7426,
                "modifierName": {
                  "id": 7425,
                  "name": "onlyPendingOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7414,
                  "src": "1030:16:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1030:16:10"
              }
            ],
            "name": "claimOwnership",
            "nameLocation": "1006:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:2:10"
            },
            "returnParameters": {
              "id": 7427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1047:0:10"
            },
            "scope": 7430,
            "src": "997:187:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7431,
        "src": "283:903:10"
      }
    ],
    "src": "40:1147:10"
  },
  "legacyAST": {
    "absolutePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryClaimable.sol",
    "exportedSymbols": {
      "ENS": [
        3934
      ],
      "FactoryClaimable": [
        7430
      ],
      "FactoryOwnable": [
        7481
      ],
      "FactoryStorage": [
        4116
      ],
      "ICreator": [
        9213
      ],
      "IProxy": [
        9231
      ],
      "IStorage": [
        9240
      ],
      "IStorageBase": [
        9246
      ],
      "IWallet": [
        9254
      ],
      "MultiSig": [
        8678
      ],
      "Proxy": [
        8918
      ],
      "ProxyLatest": [
        8948
      ],
      "Resolver": [
        3942
      ],
      "StorageBase": [
        9389
      ]
    },
    "id": 7431,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7404,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:10"
      },
      {
        "id": 7405,
        "literals": [
          "abicoder",
          "v1"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:19:10"
      },
      {
        "absolutePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/lib/FactoryOwnable.sol",
        "file": "./FactoryOwnable.sol",
        "id": 7406,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7431,
        "sourceUnit": 7482,
        "src": "85:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7408,
              "name": "FactoryOwnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7481,
              "src": "321:14:10"
            },
            "id": 7409,
            "nodeType": "InheritanceSpecifier",
            "src": "321:14:10"
          }
        ],
        "contractDependencies": [
          4116,
          7481,
          8678
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7407,
          "nodeType": "StructuredDocumentation",
          "src": "117:165:10",
          "text": " @title Claimable\n @dev Extension for the Ownable contract, where the ownership needs to be claimed.\n This allows the new owner to accept the transfer."
        },
        "fullyImplemented": false,
        "id": 7430,
        "linearizedBaseContracts": [
          7430,
          7481,
          4116,
          8678
        ],
        "name": "FactoryClaimable",
        "nameLocation": "301:16:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7413,
              "nodeType": "Block",
              "src": "528:87:10",
              "statements": [
                {
                  "id": 7412,
                  "nodeType": "PlaceholderStatement",
                  "src": "607:1:10"
                }
              ]
            },
            "documentation": {
              "id": 7410,
              "nodeType": "StructuredDocumentation",
              "src": "402:93:10",
              "text": " @dev Modifier throws if called by any account other than the pendingOwner."
            },
            "id": 7414,
            "name": "onlyPendingOwner",
            "nameLocation": "509:16:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:2:10"
            },
            "src": "500:115:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              7463
            ],
            "body": {
              "id": 7421,
              "nodeType": "Block",
              "src": "862:43:10",
              "statements": []
            },
            "documentation": {
              "id": 7415,
              "nodeType": "StructuredDocumentation",
              "src": "621:142:10",
              "text": " @dev Allows the current owner to set the pendingOwner address.\n @param newOwner The address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 7422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "777:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7419,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "853:8:10"
            },
            "parameters": {
              "id": 7418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7417,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "812:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 7422,
                  "src": "804:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:46:10"
            },
            "returnParameters": {
              "id": 7420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:10"
            },
            "scope": 7430,
            "src": "768:137:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7428,
              "nodeType": "Block",
              "src": "1047:137:10",
              "statements": []
            },
            "documentation": {
              "id": 7423,
              "nodeType": "StructuredDocumentation",
              "src": "911:81:10",
              "text": " @dev Allows the pendingOwner address to finalize the transfer."
            },
            "functionSelector": "4e71e0c8",
            "id": 7429,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7426,
                "modifierName": {
                  "id": 7425,
                  "name": "onlyPendingOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7414,
                  "src": "1030:16:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1030:16:10"
              }
            ],
            "name": "claimOwnership",
            "nameLocation": "1006:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:2:10"
            },
            "returnParameters": {
              "id": 7427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1047:0:10"
            },
            "scope": 7430,
            "src": "997:187:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7431,
        "src": "283:903:10"
      }
    ],
    "src": "40:1147:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-02T20:37:08.053Z",
  "devdoc": {
    "details": "Extension for the Ownable contract, where the ownership needs to be claimed. This allows the new owner to accept the transfer.",
    "kind": "dev",
    "methods": {
      "claimOwnership()": {
        "details": "Allows the pendingOwner address to finalize the transfer."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to set the pendingOwner address.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Claimable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "version": 1
  }
}