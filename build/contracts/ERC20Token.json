{
  "contractName": "ERC20Token",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/test/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/test/ERC20Token.sol\":{\"keccak256\":\"0x9502275679e154e41a6d1893782a21bae499c85fa975b1dbba98409d3ae5854d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2e3ddd8c5b69a0068558415559e382e5f90db98c72707ebf9e708d621e16c758\",\"dweb:/ipfs/QmZMniGV91vft5CRQbLEVf3fThBnUrAUtdrph4c7VAqhdB\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xb8cc16fa5514ccbff1123c566ec0a21682f1ded0ca7e5df719c6bd0b7429390a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a57501e3b11616e3e252ee40b4479dc09f831a9aaf83224179eb1ccd54b7eb\",\"dweb:/ipfs/QmZcREGkEbu9NoMiYXrXdJBAWNfeC41uM13rFaVL9VQafS\"]},\"openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x821af334ad764368c6b1f549e66b0bb29a96af560a2336ea5d833529f7d5525c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964556033234fa07765890a58fba434c68da0952d1e70d24e56c3b5b2c9a6ce4\",\"dweb:/ipfs/QmbkW9NZgHMNjYge7v9ZmftCvTrmwbv3QRjo7qChmjtQXC\"]},\"openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200116e3803806200116e833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604052505050630bebc20082828160039080519060200190620001be92919062000238565b508051620001d490600490602084019062000238565b505050600081116200022c5760405162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a2063617020697320300000000000000000000000604482015260640160405180910390fd5b608052506200031b9050565b8280546200024690620002de565b90600052602060002090601f0160209004810192826200026a5760008555620002b5565b82601f106200028557805160ff1916838001178555620002b5565b82800160010185558215620002b5579182015b82811115620002b557825182559160200191906001019062000298565b50620002c3929150620002c7565b5090565b5b80821115620002c35760008155600101620002c8565b600281046001821680620002f357607f821691505b602082108114156200031557634e487b7160e01b600052602260045260246000fd5b50919050565b608051610e306200033e6000396000818161021d0152610c150152610e306000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f191161009757806395d89b411161006657806395d89b4114610317578063a457c2d71461031f578063a9059cbb1461034b578063dd62ed3e14610377576100f5565b806340c10f191461026d57806342966c681461029b57806370a08231146102b857806379cc6790146102eb576100f5565b806323b872dd116100d357806323b872dd146101cd578063313ce56714610203578063355274ea1461021b5780633950935114610241576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b6101026103be565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b038135169060200135610450565b604080519115158252519081900360200190f35b6002545b60408051918252519081900360200190f35b6101a3600480360360608110156101e357600080fd5b506001600160a01b03813581169160208101359091169060400135610466565b60126040805160ff9092168252519081900360200190f35b7f00000000000000000000000000000000000000000000000000000000000000006101bb565b6101a36004803603604081101561025757600080fd5b506001600160a01b038135169060200135610531565b6102996004803603604081101561028357600080fd5b506001600160a01b038135169060200135610568565b005b610299600480360360208110156102b157600080fd5b5035610576565b6101bb600480360360208110156102ce57600080fd5b50356001600160a01b031660009081526020819052604090205490565b6102996004803603604081101561030157600080fd5b506001600160a01b038135169060200135610583565b61010261063a565b6101a36004803603604081101561033557600080fd5b506001600160a01b038135169060200135610649565b6101a36004803603604081101561036157600080fd5b506001600160a01b0381351690602001356106fc565b6101bb6004803603604081101561038d57600080fd5b506001600160a01b038135811660009081526001602090815260408083209482013590931682529290925290205490565b6060600380546103cd90610da9565b80601f01602080910402602001604051908101604052809291908181526020018280546103f990610da9565b80156104465780601f1061041b57610100808354040283529160200191610446565b820191906000526020600020905b81548152906001019060200180831161042957829003601f168201915b5050505050905090565b600061045d338484610709565b50600192915050565b6000610473848484610862565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105125760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61052685336105218685610d92565b610709565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161045d918590610521908690610d7a565b6105728282610a83565b5050565b6105803382610a8d565b50565b6001600160a01b03821660009081526001602090815260408083203384529091529020548181101561061c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760448201527f616e6365000000000000000000000000000000000000000000000000000000006064820152608401610509565b61062b83336105218585610d92565b6106358383610a8d565b505050565b6060600480546103cd90610da9565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106e35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610509565b6106f233856105218685610d92565b5060019392505050565b600061045d338484610862565b6001600160a01b0383166107845760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610509565b6001600160a01b0382166108005760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610509565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108de5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610509565b6001600160a01b03821661095a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610509565b6001600160a01b038316600090815260208190526040902054818110156109e95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610509565b6109f38282610d92565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610a29908490610d7a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a7591815260200190565b60405180910390a350505050565b6105728282610c13565b6001600160a01b038216610b095760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610509565b6001600160a01b03821660009081526020819052604090205481811015610b985760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610509565b610ba28282610d92565b6001600160a01b03841660009081526020819052604081209190915560028054849290610bd0908490610d92565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610855565b7f000000000000000000000000000000000000000000000000000000000000000081610c3e60025490565b610c489190610d7a565b1115610c965760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401610509565b61057282826001600160a01b038216610cf15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610509565b8060026000828254610d039190610d7a565b90915550506001600160a01b03821660009081526020819052604081208054839290610d30908490610d7a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60008219821115610d8d57610d8d610de4565b500190565b600082821015610da457610da4610de4565b500390565b600281046001821680610dbd57607f821691505b60208210811415610dde57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208d6905fe0dd9b8dfa2327331ed5b74ec4a4b58ec0bb15e588348665907c81a8d64736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f191161009757806395d89b411161006657806395d89b4114610317578063a457c2d71461031f578063a9059cbb1461034b578063dd62ed3e14610377576100f5565b806340c10f191461026d57806342966c681461029b57806370a08231146102b857806379cc6790146102eb576100f5565b806323b872dd116100d357806323b872dd146101cd578063313ce56714610203578063355274ea1461021b5780633950935114610241576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b6101026103be565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b038135169060200135610450565b604080519115158252519081900360200190f35b6002545b60408051918252519081900360200190f35b6101a3600480360360608110156101e357600080fd5b506001600160a01b03813581169160208101359091169060400135610466565b60126040805160ff9092168252519081900360200190f35b7f00000000000000000000000000000000000000000000000000000000000000006101bb565b6101a36004803603604081101561025757600080fd5b506001600160a01b038135169060200135610531565b6102996004803603604081101561028357600080fd5b506001600160a01b038135169060200135610568565b005b610299600480360360208110156102b157600080fd5b5035610576565b6101bb600480360360208110156102ce57600080fd5b50356001600160a01b031660009081526020819052604090205490565b6102996004803603604081101561030157600080fd5b506001600160a01b038135169060200135610583565b61010261063a565b6101a36004803603604081101561033557600080fd5b506001600160a01b038135169060200135610649565b6101a36004803603604081101561036157600080fd5b506001600160a01b0381351690602001356106fc565b6101bb6004803603604081101561038d57600080fd5b506001600160a01b038135811660009081526001602090815260408083209482013590931682529290925290205490565b6060600380546103cd90610da9565b80601f01602080910402602001604051908101604052809291908181526020018280546103f990610da9565b80156104465780601f1061041b57610100808354040283529160200191610446565b820191906000526020600020905b81548152906001019060200180831161042957829003601f168201915b5050505050905090565b600061045d338484610709565b50600192915050565b6000610473848484610862565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105125760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61052685336105218685610d92565b610709565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161045d918590610521908690610d7a565b6105728282610a83565b5050565b6105803382610a8d565b50565b6001600160a01b03821660009081526001602090815260408083203384529091529020548181101561061c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760448201527f616e6365000000000000000000000000000000000000000000000000000000006064820152608401610509565b61062b83336105218585610d92565b6106358383610a8d565b505050565b6060600480546103cd90610da9565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106e35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610509565b6106f233856105218685610d92565b5060019392505050565b600061045d338484610862565b6001600160a01b0383166107845760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610509565b6001600160a01b0382166108005760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610509565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108de5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610509565b6001600160a01b03821661095a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610509565b6001600160a01b038316600090815260208190526040902054818110156109e95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610509565b6109f38282610d92565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610a29908490610d7a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a7591815260200190565b60405180910390a350505050565b6105728282610c13565b6001600160a01b038216610b095760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610509565b6001600160a01b03821660009081526020819052604090205481811015610b985760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610509565b610ba28282610d92565b6001600160a01b03841660009081526020819052604081209190915560028054849290610bd0908490610d92565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610855565b7f000000000000000000000000000000000000000000000000000000000000000081610c3e60025490565b610c489190610d7a565b1115610c965760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401610509565b61057282826001600160a01b038216610cf15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610509565b8060026000828254610d039190610d7a565b90915550506001600160a01b03821660009081526020819052604081208054839290610d30908490610d7a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60008219821115610d8d57610d8d610de4565b500190565b600082821015610da457610da4610de4565b500390565b600281046001821680610dbd57607f821691505b60208210811415610dde57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208d6905fe0dd9b8dfa2327331ed5b74ec4a4b58ec0bb15e588348665907c81a8d64736f6c63430008020033",
  "immutableReferences": {
    "10477": [
      {
        "length": 32,
        "start": 541
      },
      {
        "length": 32,
        "start": 3093
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:746:46",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:46",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:171:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:46",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:23:46",
                        "type": "",
                        "value": "ERC20Capped: cap is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:51:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:51:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "327:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "339:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "350:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "335:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "335:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "327:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:46",
                "type": ""
              }
            ],
            "src": "14:345:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "419:325:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "429:22:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "443:4:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "449:1:46",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "439:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "439:12:46"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "429:6:46"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "460:38:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "490:4:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:1:46",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "486:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:12:46"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "464:18:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "537:31:46",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "539:27:46",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "553:6:46"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "561:4:46",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "549:3:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "549:17:46"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "539:6:46"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "517:18:46"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "510:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:26:46"
                  },
                  "nodeType": "YulIf",
                  "src": "507:2:46"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "627:111:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "648:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "655:3:46",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "660:10:46",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "651:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "651:20:46"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "641:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "641:31:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "641:31:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "692:1:46",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "695:4:46",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "685:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "685:15:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "685:15:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "720:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "723:4:46",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "713:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "713:15:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "713:15:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "583:18:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "606:6:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "614:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "603:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "603:14:46"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "580:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "580:38:46"
                  },
                  "nodeType": "YulIf",
                  "src": "577:2:46"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "399:4:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "408:6:46",
                "type": ""
              }
            ],
            "src": "364:380:46"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ERC20Capped: cap is 0\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 46,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5851:46",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:46",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:225:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:46",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:34:46",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "349:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "360:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "345:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "345:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "365:5:46",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "338:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:33:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "338:33:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "380:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "392:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "403:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "388:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "388:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "380:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:46",
                "type": ""
              }
            ],
            "src": "14:399:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "592:224:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "609:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "620:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "602:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "602:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "602:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "643:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "654:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "639:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "639:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:46",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "632:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "632:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "682:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "693:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "678:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "678:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "698:34:46",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "671:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "671:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "671:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "753:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "764:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "749:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "749:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "769:4:46",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "742:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "742:32:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "742:32:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "783:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "795:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "806:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "791:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "791:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "783:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "569:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "583:4:46",
                "type": ""
              }
            ],
            "src": "418:398:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "995:224:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1012:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1023:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1005:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1005:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1005:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1046:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1057:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1042:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1042:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1062:2:46",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1035:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1035:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1035:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1085:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1096:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1081:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1081:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1101:34:46",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1074:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1074:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1074:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1156:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1167:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1152:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1152:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1172:4:46",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1145:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1145:32:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1145:32:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1186:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1198:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1209:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1194:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1186:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "972:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "986:4:46",
                "type": ""
              }
            ],
            "src": "821:398:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1398:228:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1415:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1426:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1408:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1408:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1408:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1449:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1460:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1445:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1445:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1465:2:46",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1438:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1438:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1438:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1488:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1499:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1484:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1484:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1504:34:46",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1477:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1477:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1559:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1570:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1555:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1555:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1575:8:46",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1548:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1548:36:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1548:36:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1593:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1605:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1616:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1601:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1601:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1593:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1375:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1389:4:46",
                "type": ""
              }
            ],
            "src": "1224:402:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1805:230:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1822:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1833:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1815:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1815:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1856:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1867:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1852:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1872:2:46",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1845:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1845:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1895:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1906:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1891:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1911:34:46",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1884:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1884:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1884:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1966:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1977:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1962:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1962:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1982:10:46",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1955:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1955:38:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1955:38:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2002:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2014:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2025:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2010:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2010:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2002:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1782:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1796:4:46",
                "type": ""
              }
            ],
            "src": "1631:404:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2214:226:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2231:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2242:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2224:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2224:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2224:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2265:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2276:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2261:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2261:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2281:2:46",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2254:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2254:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2254:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2304:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2315:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2300:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2300:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2320:34:46",
                        "type": "",
                        "value": "ERC20: burn amount exceeds allow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2293:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2293:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2293:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2375:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2386:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2371:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2371:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2391:6:46",
                        "type": "",
                        "value": "ance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2364:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2364:34:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2364:34:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2407:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2419:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2430:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2415:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2415:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2407:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2191:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2205:4:46",
                "type": ""
              }
            ],
            "src": "2040:400:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2619:223:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2636:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2647:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2629:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2629:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2629:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2670:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2681:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2666:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2666:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2686:2:46",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2659:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2659:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2659:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2709:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2720:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2705:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2705:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2725:34:46",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2698:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2698:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2698:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2780:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2791:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2776:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2776:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2796:3:46",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2769:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2769:31:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2769:31:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2809:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2821:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2832:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2817:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2817:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2809:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2596:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2610:4:46",
                "type": ""
              }
            ],
            "src": "2445:397:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3021:227:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3038:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3049:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3031:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3031:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3031:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3072:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3083:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3068:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3068:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3088:2:46",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3061:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3061:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3061:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3111:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3122:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3107:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3107:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3127:34:46",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3100:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3100:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3100:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3182:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3193:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3178:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3178:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3198:7:46",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3171:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3171:35:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3171:35:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3215:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3227:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3238:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3223:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3223:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3215:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2998:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3012:4:46",
                "type": ""
              }
            ],
            "src": "2847:401:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3427:175:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3444:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3455:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3437:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3437:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3437:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3478:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3489:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3474:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3474:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3494:2:46",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3467:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3467:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3467:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3517:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3528:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3513:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3513:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3533:27:46",
                        "type": "",
                        "value": "ERC20Capped: cap exceeded"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3506:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3506:55:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3506:55:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3570:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3582:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3593:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3578:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3578:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3570:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3404:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3418:4:46",
                "type": ""
              }
            ],
            "src": "3253:349:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3781:226:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3798:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3809:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3791:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3791:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3791:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3832:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3843:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3828:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3828:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3848:2:46",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3821:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3821:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3821:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3871:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3882:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3867:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3867:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3887:34:46",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3860:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3860:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3860:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3942:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3953:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3938:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3938:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3958:6:46",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3931:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3931:34:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3931:34:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3974:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3986:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3997:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3982:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3982:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3974:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3758:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3772:4:46",
                "type": ""
              }
            ],
            "src": "3607:400:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4186:227:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4203:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4214:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4196:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4196:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4196:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4237:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4248:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4233:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4233:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4253:2:46",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4226:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4226:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4226:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4276:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4287:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4272:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4272:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4292:34:46",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4265:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4265:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4265:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4347:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4358:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4343:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4343:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4363:7:46",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4336:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4336:35:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4336:35:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4380:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4392:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4403:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4388:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4388:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4380:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4163:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4177:4:46",
                "type": ""
              }
            ],
            "src": "4012:401:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4592:181:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4609:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4620:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4602:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4602:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4602:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4643:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4654:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4639:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4639:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4659:2:46",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4632:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4632:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4632:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4682:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4693:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4678:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4678:18:46"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4698:33:46",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4671:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4671:61:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4671:61:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4741:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4753:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4764:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4749:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4749:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4741:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4569:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4583:4:46",
                "type": ""
              }
            ],
            "src": "4418:355:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4879:76:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4889:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4901:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4912:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4897:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4897:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4889:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4931:9:46"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4942:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4924:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4924:25:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4924:25:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4848:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4859:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4870:4:46",
                "type": ""
              }
            ],
            "src": "4778:177:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5008:80:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5035:22:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5037:16:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5037:18:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5037:18:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5024:1:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5031:1:46"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5027:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5027:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5021:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5021:13:46"
                  },
                  "nodeType": "YulIf",
                  "src": "5018:2:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5066:16:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5077:1:46"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5080:1:46"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5073:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5073:9:46"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5066:3:46"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4991:1:46",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4994:1:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5000:3:46",
                "type": ""
              }
            ],
            "src": "4960:128:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5142:76:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5164:22:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5166:16:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5166:18:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5166:18:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5158:1:46"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5161:1:46"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5155:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5155:8:46"
                  },
                  "nodeType": "YulIf",
                  "src": "5152:2:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5195:17:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5207:1:46"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5210:1:46"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5203:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5203:9:46"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "5195:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5124:1:46",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5127:1:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "5133:4:46",
                "type": ""
              }
            ],
            "src": "5093:125:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5278:382:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5288:22:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5302:4:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5308:1:46",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "5298:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5298:12:46"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5288:6:46"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5319:38:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5349:4:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5355:1:46",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5345:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5345:12:46"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5323:18:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5396:31:46",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5398:27:46",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5412:6:46"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5420:4:46",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5408:3:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5408:17:46"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5398:6:46"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5376:18:46"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5369:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5369:26:46"
                  },
                  "nodeType": "YulIf",
                  "src": "5366:2:46"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5486:168:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5507:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5510:77:46",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5500:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5500:88:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5500:88:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5608:1:46",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5611:4:46",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5601:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5601:15:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5601:15:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5636:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5639:4:46",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5629:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5629:15:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5629:15:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5442:18:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5465:6:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5473:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5462:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5462:14:46"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5439:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5439:38:46"
                  },
                  "nodeType": "YulIf",
                  "src": "5436:2:46"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5258:4:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5267:6:46",
                "type": ""
              }
            ],
            "src": "5223:437:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5697:152:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5714:1:46",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5717:77:46",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5707:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5707:88:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5707:88:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5811:1:46",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5814:4:46",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5804:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5804:15:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5804:15:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5835:1:46",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5838:4:46",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5828:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5828:15:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5828:15:46"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5665:184:46"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds allow\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Capped: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 46,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "314:1179:21:-:0;;;377:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;377:143:21;;;;;;;;;;-1:-1:-1;377:143:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;377:143:21;;;;;;;;;;-1:-1:-1;377:143:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;475:9;500:4;506:6;1973:5:29;1965;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1988:17:29;;;;:7;;:17;;;;;:::i;:::-;;1898:114;;428:1:32;421:4;:8;413:42;;;;-1:-1:-1;;;413:42:32;;216:2:46;413:42:32;;;198:21:46;255:2;235:18;;;228:30;294:23;274:18;;;267:51;335:18;;413:42:32;;;;;;;;465:11;;-1:-1:-1;314:1179:21;;-1:-1:-1;314:1179:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;314:1179:21;;;-1:-1:-1;314:1179:21;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;364:380:46;449:1;439:12;;496:1;486:12;;;507:2;;561:4;553:6;549:17;539:27;;507:2;614;606:6;603:14;583:18;580:38;577:2;;;660:10;655:3;651:20;648:1;641:31;695:4;692:1;685:15;723:4;720:1;713:15;577:2;;419:325;;;:::o;:::-;314:1179:21;;;;;;;;;;",
  "deployedSourceMap": "314:1179:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4174:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4174:166:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3165:106;3252:12;;3165:106;;;;;;;;;;;;;;;;4807:414;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4807:414:29;;;;;;;;;;;;;;;;;:::i;3014:91::-;3096:2;3014:91;;;;;;;;;;;;;;;;;;562:81:32;632:4;562:81;;5616:212:29;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5616:212:29;;;;;;;;:::i;810:93:21:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;810:93:21;;;;;;;;:::i;:::-;;487:89:31;;;;;;;;;;;;;;;;-1:-1:-1;487:89:31;;:::i;3329:125:29:-;;;;;;;;;;;;;;;;-1:-1:-1;3329:125:29;-1:-1:-1;;;;;3329:125:29;3403:7;3429:18;;;;;;;;;;;;3329:125;882:327:31;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;882:327:31;;;;;;;;:::i;2288:102:29:-;;;:::i;6315:371::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6315:371:29;;;;;;;;:::i;3657:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3657:172:29;;;;;;;;:::i;3887:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3887:149:29;;;;3976:7;4002:18;;;:11;3887:149;4002:18;;;;;;;3887:149;;;;;;;4002:27;;;;;;;;;;3887:149;2077:98;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;665:10:40;4296:7:29;4305:6;4273:8;:39::i;:::-;-1:-1:-1;4329:4:29;4174:166;;;;:::o;4807:414::-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;-1:-1:-1;;;;;5003:19:29;;4976:24;5003:19;;;:11;:19;;;;;;;;665:10:40;5003:33:29;;;;;;;;5054:26;;;;5046:79;;;;-1:-1:-1;;;5046:79:29;;1833:2:46;5046:79:29;;;1815:21:46;1872:2;1852:18;;;1845:30;1911:34;1891:18;;;1884:62;1982:10;1962:18;;;1955:38;2010:19;;5046:79:29;;;;;;;;;5135:57;5144:6;665:10:40;5166:25:29;5185:6;5166:16;:25;:::i;:::-;5135:8;:57::i;:::-;-1:-1:-1;5210:4:29;;4807:414;-1:-1:-1;;;;4807:414:29:o;5616:212::-;665:10:40;5704:4:29;5752:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5752:34:29;;;;;;;;;;5704:4;;5720:80;;5743:7;;5752:47;;5789:10;;5752:47;:::i;810:93:21:-;874:22;880:7;889:6;874:5;:22::i;:::-;810:93;;:::o;487:89:31:-;542:27;665:10:40;562:6:31;542:5;:27::i;:::-;487:89;:::o;882:327::-;-1:-1:-1;;;;;4002:18:29;;958:24:31;4002:18:29;;;:11;:18;;;;;;;;665:10:40;4002:27:29;;;;;;;;1035:26:31;;;;1027:75;;;;-1:-1:-1;;;1027:75:31;;2242:2:46;1027:75:31;;;2224:21:46;2281:2;2261:18;;;2254:30;2320:34;2300:18;;;2293:62;2391:6;2371:18;;;2364:34;2415:19;;1027:75:31;2214:226:46;1027:75:31;1112:58;1121:7;665:10:40;1144:25:31;1163:6;1144:16;:25;:::i;1112:58::-;1180:22;1186:7;1195:6;1180:5;:22::i;:::-;882:327;;;:::o;2288:102:29:-;2344:13;2376:7;2369:14;;;;;:::i;6315:371::-;665:10:40;6408:4:29;6451:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6451:34:29;;;;;;;;;;6503:35;;;;6495:85;;;;-1:-1:-1;;;6495:85:29;;4214:2:46;6495:85:29;;;4196:21:46;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;4363:7;4343:18;;;4336:35;4388:19;;6495:85:29;4186:227:46;6495:85:29;6590:67;665:10:40;6613:7:29;6622:34;6641:15;6622:16;:34;:::i;6590:67::-;-1:-1:-1;6675:4:29;;6315:371;-1:-1:-1;;;6315:371:29:o;3657:172::-;3743:4;3759:42;665:10:40;3783:9:29;3794:6;3759:9;:42::i;9579:340::-;-1:-1:-1;;;;;9680:19:29;;9672:68;;;;-1:-1:-1;;;9672:68:29;;3809:2:46;9672:68:29;;;3791:21:46;3848:2;3828:18;;;3821:30;3887:34;3867:18;;;3860:62;3958:6;3938:18;;;3931:34;3982:19;;9672:68:29;3781:226:46;9672:68:29;-1:-1:-1;;;;;9758:21:29;;9750:68;;;;-1:-1:-1;;;9750:68:29;;1023:2:46;9750:68:29;;;1005:21:46;1062:2;1042:18;;;1035:30;1101:34;1081:18;;;1074:62;1172:4;1152:18;;;1145:32;1194:19;;9750:68:29;995:224:46;9750:68:29;-1:-1:-1;;;;;9829:18:29;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9880:32;;4924:25:46;;;9880:32:29;;4897:18:46;9880:32:29;;;;;;;;9579:340;;;:::o;7160:592::-;-1:-1:-1;;;;;7265:20:29;;7257:70;;;;-1:-1:-1;;;7257:70:29;;3049:2:46;7257:70:29;;;3031:21:46;3088:2;3068:18;;;3061:30;3127:34;3107:18;;;3100:62;3198:7;3178:18;;;3171:35;3223:19;;7257:70:29;3021:227:46;7257:70:29;-1:-1:-1;;;;;7345:23:29;;7337:71;;;;-1:-1:-1;;;7337:71:29;;216:2:46;7337:71:29;;;198:21:46;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:5;345:18;;;338:33;388:19;;7337:71:29;188:225:46;7337:71:29;-1:-1:-1;;;;;7501:17:29;;7477:21;7501:17;;;;;;;;;;;7536:23;;;;7528:74;;;;-1:-1:-1;;;7528:74:29;;1426:2:46;7528:74:29;;;1408:21:46;1465:2;1445:18;;;1438:30;1504:34;1484:18;;;1477:62;1575:8;1555:18;;;1548:36;1601:19;;7528:74:29;1398:228:46;7528:74:29;7632:22;7648:6;7632:13;:22;:::i;:::-;-1:-1:-1;;;;;7612:17:29;;;:9;:17;;;;;;;;;;;:42;;;;7664:20;;;;;;;;:30;;7688:6;;7612:9;7664:30;;7688:6;;7664:30;:::i;:::-;;;;;;;;7727:9;-1:-1:-1;;;;;7710:35:29;7719:6;-1:-1:-1;;;;;7710:35:29;;7738:6;7710:35;;;;4924:25:46;;4912:2;4897:18;;4879:76;7710:35:29;;;;;;;;7160:592;;;;:::o;647:157:21:-;763:34;781:7;790:6;763:17;:34::i;8673:483:29:-;-1:-1:-1;;;;;8756:21:29;;8748:67;;;;-1:-1:-1;;;8748:67:29;;2647:2:46;8748:67:29;;;2629:21:46;2686:2;2666:18;;;2659:30;2725:34;2705:18;;;2698:62;2796:3;2776:18;;;2769:31;2817:19;;8748:67:29;2619:223:46;8748:67:29;-1:-1:-1;;;;;8911:18:29;;8886:22;8911:18;;;;;;;;;;;8947:24;;;;8939:71;;;;-1:-1:-1;;;8939:71:29;;620:2:46;8939:71:29;;;602:21:46;659:2;639:18;;;632:30;698:34;678:18;;;671:62;769:4;749:18;;;742:32;791:19;;8939:71:29;592:224:46;8939:71:29;9041:23;9058:6;9041:14;:23;:::i;:::-;-1:-1:-1;;;;;9020:18:29;;:9;:18;;;;;;;;;;:44;;;;9074:12;:22;;9090:6;;9020:9;9074:22;;9090:6;;9074:22;:::i;:::-;;;;-1:-1:-1;;9112:37:29;;4924:25:46;;;9138:1:29;;-1:-1:-1;;;;;9112:37:29;;;;;4912:2:46;4897:18;9112:37:29;4879:76:46;696:204:32;632:4;810:6;788:19;3252:12:29;;3165:106;;788:19:32;:28;;;;:::i;:::-;:37;;780:75;;;;-1:-1:-1;;;780:75:32;;3455:2:46;780:75:32;;;3437:21:46;3494:2;3474:18;;;3467:30;3533:27;3513:18;;;3506:55;3578:18;;780:75:32;3427:175:46;780:75:32;865:28;877:7;886:6;-1:-1:-1;;;;;8106:21:29;;8098:65;;;;-1:-1:-1;;;8098:65:29;;4620:2:46;8098:65:29;;;4602:21:46;4659:2;4639:18;;;4632:30;4698:33;4678:18;;;4671:61;4749:18;;8098:65:29;4592:181:46;8098:65:29;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8266:18:29;;:9;:18;;;;;;;;;;:28;;8288:6;;8266:9;:28;;8288:6;;8266:28;:::i;:::-;;;;-1:-1:-1;;8309:37:29;;4924:25:46;;;-1:-1:-1;;;;;8309:37:29;;;8326:1;;8309:37;;4912:2:46;4897:18;8309:37:29;;;;;;;8023:330;;:::o;4960:128:46:-;;5031:1;5027:6;5024:1;5021:13;5018:2;;;5037:18;;:::i;:::-;-1:-1:-1;5073:9:46;;5008:80::o;5093:125::-;;5161:1;5158;5155:8;5152:2;;;5166:18;;:::i;:::-;-1:-1:-1;5203:9:46;;5142:76::o;5223:437::-;5308:1;5298:12;;5355:1;5345:12;;;5366:2;;5420:4;5412:6;5408:17;5398:27;;5366:2;5473;5465:6;5462:14;5442:18;5439:38;5436:2;;;-1:-1:-1;;;5507:1:46;5500:88;5611:4;5608:1;5601:15;5639:4;5636:1;5629:15;5436:2;;5278:382;;;:::o;5665:184::-;-1:-1:-1;;;5714:1:46;5707:88;5814:4;5811:1;5804:15;5838:4;5835:1;5828:15",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\npragma abicoder v1;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n\ncontract ERC20Token is ERC20, ERC20Capped, ERC20Burnable {\n    constructor(string memory name, string memory symbol)\n        ERC20Burnable()\n        ERC20Capped(200000000)\n        ERC20(name, symbol)\n    {}\n\n    // function _beforeTokenTransfer(address from, address to, uint256 amount) internal override(ERC20, ERC20Capped) { }\n    function _mint(address account, uint256 amount)\n        internal\n        override(ERC20, ERC20Capped)\n    {\n        ERC20Capped._mint(account, amount);\n    }\n\n    function mint(address account, uint256 amount) public {\n        _mint(account, amount);\n    }\n\n    // function transfer(address account, uint256 amount) public override returns (bool) {\n    //     _mint(account, amount);\n    //     _burn(account, amount);\n    //     _mint(account, amount);\n    //     _burn(account, amount);\n    //     _mint(account, amount);\n    //     _burn(account, amount);\n    //     _mint(account, amount);\n    //     _burn(account, amount);\n    //     _mint(account, amount);\n    //     _burn(account, amount);\n    //     super.transfer(account, amount);\n    // }\n\n    // function transfer2(address account, uint256 amount) public returns (bool) {\n    // }\n}\n",
  "sourcePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/test/ERC20Token.sol",
  "ast": {
    "absolutePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/test/ERC20Token.sol",
    "exportedSymbols": {
      "Context": [
        11985
      ],
      "ERC20": [
        10330
      ],
      "ERC20Burnable": [
        10469
      ],
      "ERC20Capped": [
        10534
      ],
      "ERC20Token": [
        9450
      ],
      "IERC20": [
        10408
      ],
      "IERC20Metadata": [
        10559
      ]
    },
    "id": 9451,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9391,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:21"
      },
      {
        "id": 9392,
        "literals": [
          "abicoder",
          "v1"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:19:21"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 9393,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9451,
        "sourceUnit": 10331,
        "src": "85:63:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "id": 9394,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9451,
        "sourceUnit": 10535,
        "src": "149:80:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 9395,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9451,
        "sourceUnit": 10470,
        "src": "230:82:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9396,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10330,
              "src": "337:5:21"
            },
            "id": 9397,
            "nodeType": "InheritanceSpecifier",
            "src": "337:5:21"
          },
          {
            "baseName": {
              "id": 9398,
              "name": "ERC20Capped",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10534,
              "src": "344:11:21"
            },
            "id": 9399,
            "nodeType": "InheritanceSpecifier",
            "src": "344:11:21"
          },
          {
            "baseName": {
              "id": 9400,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10469,
              "src": "357:13:21"
            },
            "id": 9401,
            "nodeType": "InheritanceSpecifier",
            "src": "357:13:21"
          }
        ],
        "contractDependencies": [
          10330,
          10408,
          10469,
          10534,
          10559,
          11985
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9450,
        "linearizedBaseContracts": [
          9450,
          10469,
          10534,
          10330,
          10559,
          10408,
          11985
        ],
        "name": "ERC20Token",
        "nameLocation": "323:10:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9417,
              "nodeType": "Block",
              "src": "518:2:21",
              "statements": []
            },
            "id": 9418,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 9408,
                "modifierName": {
                  "id": 9407,
                  "name": "ERC20Burnable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10469,
                  "src": "439:13:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "439:15:21"
              },
              {
                "arguments": [
                  {
                    "hexValue": "323030303030303030",
                    "id": 9410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "475:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000_by_1",
                      "typeString": "int_const 200000000"
                    },
                    "value": "200000000"
                  }
                ],
                "id": 9411,
                "modifierName": {
                  "id": 9409,
                  "name": "ERC20Capped",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10534,
                  "src": "463:11:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "463:22:21"
              },
              {
                "arguments": [
                  {
                    "id": 9413,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9403,
                    "src": "500:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 9414,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9405,
                    "src": "506:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 9415,
                "modifierName": {
                  "id": 9412,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10330,
                  "src": "494:5:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "494:19:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9403,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "403:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9418,
                  "src": "389:18:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9405,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "423:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9418,
                  "src": "409:20:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9404,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "388:42:21"
            },
            "returnParameters": {
              "id": 9416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:21"
            },
            "scope": 9450,
            "src": "377:143:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10211,
              10533
            ],
            "body": {
              "id": 9435,
              "nodeType": "Block",
              "src": "753:51:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9431,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9420,
                        "src": "781:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9432,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9422,
                        "src": "790:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9428,
                        "name": "ERC20Capped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10534,
                        "src": "763:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$10534_$",
                          "typeString": "type(contract ERC20Capped)"
                        }
                      },
                      "id": 9430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10533,
                      "src": "763:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "763:34:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9434,
                  "nodeType": "ExpressionStatement",
                  "src": "763:34:21"
                }
              ]
            },
            "id": 9436,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "656:5:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9426,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 9424,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10330,
                  "src": "729:5:21"
                },
                {
                  "id": 9425,
                  "name": "ERC20Capped",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10534,
                  "src": "736:11:21"
                }
              ],
              "src": "720:28:21"
            },
            "parameters": {
              "id": 9423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9420,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "670:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9436,
                  "src": "662:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9422,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "687:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9436,
                  "src": "679:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "661:33:21"
            },
            "returnParameters": {
              "id": 9427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "753:0:21"
            },
            "scope": 9450,
            "src": "647:157:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9448,
              "nodeType": "Block",
              "src": "864:39:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9444,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9438,
                        "src": "880:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9445,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9440,
                        "src": "889:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9443,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9436
                      ],
                      "referencedDeclaration": 9436,
                      "src": "874:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:22:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9447,
                  "nodeType": "ExpressionStatement",
                  "src": "874:22:21"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 9449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "819:4:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9438,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "832:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9449,
                  "src": "824:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9440,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "849:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9449,
                  "src": "841:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "823:33:21"
            },
            "returnParameters": {
              "id": 9442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:0:21"
            },
            "scope": 9450,
            "src": "810:93:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9451,
        "src": "314:1179:21"
      }
    ],
    "src": "40:1454:21"
  },
  "legacyAST": {
    "absolutePath": "/opt/storage/data1/code/kirobo/ki-eth-contracts/contracts/test/ERC20Token.sol",
    "exportedSymbols": {
      "Context": [
        11985
      ],
      "ERC20": [
        10330
      ],
      "ERC20Burnable": [
        10469
      ],
      "ERC20Capped": [
        10534
      ],
      "ERC20Token": [
        9450
      ],
      "IERC20": [
        10408
      ],
      "IERC20Metadata": [
        10559
      ]
    },
    "id": 9451,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9391,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:21"
      },
      {
        "id": 9392,
        "literals": [
          "abicoder",
          "v1"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:19:21"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 9393,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9451,
        "sourceUnit": 10331,
        "src": "85:63:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "id": 9394,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9451,
        "sourceUnit": 10535,
        "src": "149:80:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 9395,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9451,
        "sourceUnit": 10470,
        "src": "230:82:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9396,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10330,
              "src": "337:5:21"
            },
            "id": 9397,
            "nodeType": "InheritanceSpecifier",
            "src": "337:5:21"
          },
          {
            "baseName": {
              "id": 9398,
              "name": "ERC20Capped",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10534,
              "src": "344:11:21"
            },
            "id": 9399,
            "nodeType": "InheritanceSpecifier",
            "src": "344:11:21"
          },
          {
            "baseName": {
              "id": 9400,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10469,
              "src": "357:13:21"
            },
            "id": 9401,
            "nodeType": "InheritanceSpecifier",
            "src": "357:13:21"
          }
        ],
        "contractDependencies": [
          10330,
          10408,
          10469,
          10534,
          10559,
          11985
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9450,
        "linearizedBaseContracts": [
          9450,
          10469,
          10534,
          10330,
          10559,
          10408,
          11985
        ],
        "name": "ERC20Token",
        "nameLocation": "323:10:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9417,
              "nodeType": "Block",
              "src": "518:2:21",
              "statements": []
            },
            "id": 9418,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 9408,
                "modifierName": {
                  "id": 9407,
                  "name": "ERC20Burnable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10469,
                  "src": "439:13:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "439:15:21"
              },
              {
                "arguments": [
                  {
                    "hexValue": "323030303030303030",
                    "id": 9410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "475:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000_by_1",
                      "typeString": "int_const 200000000"
                    },
                    "value": "200000000"
                  }
                ],
                "id": 9411,
                "modifierName": {
                  "id": 9409,
                  "name": "ERC20Capped",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10534,
                  "src": "463:11:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "463:22:21"
              },
              {
                "arguments": [
                  {
                    "id": 9413,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9403,
                    "src": "500:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 9414,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9405,
                    "src": "506:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 9415,
                "modifierName": {
                  "id": 9412,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10330,
                  "src": "494:5:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "494:19:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9403,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "403:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9418,
                  "src": "389:18:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9405,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "423:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9418,
                  "src": "409:20:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9404,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "388:42:21"
            },
            "returnParameters": {
              "id": 9416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:21"
            },
            "scope": 9450,
            "src": "377:143:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10211,
              10533
            ],
            "body": {
              "id": 9435,
              "nodeType": "Block",
              "src": "753:51:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9431,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9420,
                        "src": "781:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9432,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9422,
                        "src": "790:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9428,
                        "name": "ERC20Capped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10534,
                        "src": "763:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$10534_$",
                          "typeString": "type(contract ERC20Capped)"
                        }
                      },
                      "id": 9430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10533,
                      "src": "763:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "763:34:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9434,
                  "nodeType": "ExpressionStatement",
                  "src": "763:34:21"
                }
              ]
            },
            "id": 9436,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "656:5:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9426,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 9424,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10330,
                  "src": "729:5:21"
                },
                {
                  "id": 9425,
                  "name": "ERC20Capped",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10534,
                  "src": "736:11:21"
                }
              ],
              "src": "720:28:21"
            },
            "parameters": {
              "id": 9423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9420,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "670:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9436,
                  "src": "662:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9422,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "687:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9436,
                  "src": "679:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "661:33:21"
            },
            "returnParameters": {
              "id": 9427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "753:0:21"
            },
            "scope": 9450,
            "src": "647:157:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9448,
              "nodeType": "Block",
              "src": "864:39:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9444,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9438,
                        "src": "880:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9445,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9440,
                        "src": "889:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9443,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9436
                      ],
                      "referencedDeclaration": 9436,
                      "src": "874:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:22:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9447,
                  "nodeType": "ExpressionStatement",
                  "src": "874:22:21"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 9449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "819:4:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9438,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "832:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9449,
                  "src": "824:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9440,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "849:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9449,
                  "src": "841:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "823:33:21"
            },
            "returnParameters": {
              "id": 9442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:0:21"
            },
            "scope": 9450,
            "src": "810:93:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9451,
        "src": "314:1179:21"
      }
    ],
    "src": "40:1454:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x743B5321C6e8dDc9e6f853eb832785eB899b5E94",
      "transactionHash": "0xa8490276214739e817fd159d6faf002c4a365cba1be906901fbcdcf7bbed02a4"
    },
    "1337": {
      "events": {},
      "links": {},
      "address": "0xB0E0F6c3b8729e4623Ed0129b6647bAFBBfab1CB",
      "transactionHash": "0xc7ff69f9ba7db9d2f20673074c8cc8a2a384e33a2491efff3cdd874cb801d4e2"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-02T20:37:11.217Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}